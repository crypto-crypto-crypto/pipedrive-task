name: Task pipeline
on: [push]
env:
  REGISTRY: "registry.digitalocean.com/pipedrive-task"
  IMAGE_NAME: "server"
  COMMAND: "node server.js"
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        -
          name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        -
          name: Build and push
          id: docker_build
          uses: docker/build-push-action@v2
          with:
            # context: .
            push: true
            tags: jcrm/pipedrive-task-server:latest
        -
          name: Image digest
          run: echo ${{ steps.docker_build.outputs.digest }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push'
  #   needs: build_and_push

  #   steps:
  #     - name: Deploy to Digital Ocean droplet via SSH action
  #       uses: appleboy/ssh-action@v0.1.3
  #       with:
  #         HOST: ${{ secrets.HOST }}
  #         USERNAME: ${{ secrets.USERNAME }}
  #         KEY: ${{ secrets.SSHKEY }}
  #         envs: IMAGE_NAME,REGISTRY,GITHUB_SHA
  #         script: |
  #           # Stop running container
  #           docker stop $(echo $IMAGE_NAME)

  #           # Remove old container
  #           docker rm $(echo $IMAGE_NAME)

  #           # Run a new container from a new image
  #           docker run -d \
  #           --restart always \
  #           -p 8080:8080 \
  #           -e API_TOKEN_PIPEDRIVE=${{ secrets.API_TOKEN_PIPEDRIVE }} \
  #           -e API_TOKEN_GITHUB=${{ secrets.API_TOKEN_GITHUB }} \
  #           --name $(echo $IMAGE_NAME) \
  #           $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
